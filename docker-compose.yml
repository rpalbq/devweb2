version: "3.8"

services:
  #  Aplica√ß√£o Principal (Frontend + API)
  app-main:
    build: ./app-main
    container_name: app_main
    ports:
      - "8080:5000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - DB_NAME=moodtracker
    volumes:
      - ./app-main:/app
    networks:
      - moodtracker-network

  # Servi√ßo de Relat√≥rios (Microsservi√ßo)
  report-service:
    build: ./report-service
    container_name: report_service
    ports:
      - "8081:5001"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - DB_NAME=moodtracker
    volumes:
      - ./report-service:/app
    networks:
      - moodtracker-network

  # üóÑÔ∏è Interface de Administra√ß√£o do MongoDB
  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    restart: always
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_MONGODB_ADMINUSERNAME: ""
      ME_CONFIG_MONGODB_ADMINPASSWORD: ""
    depends_on:
      - mongo
    networks:
      - moodtracker-network

  #  Banco de Dados MongoDB
  mongo:
    image: mongo:5.0
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - moodtracker-network

#  Rede isolada para comunica√ß√£o entre servi√ßos
networks:
  moodtracker-network:
    driver: bridge

#  Volume persistente para dados do MongoDB
volumes:
  mongo_data:
    driver: local